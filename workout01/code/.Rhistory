stat133
rm(list = ls())
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
getwd()
load('nba2018-salary-points.RData')
ls()
four <- head(player, n=4)
four[1]
four[0]
four[-1]
four[-c(1,2,3)]
four[5]
four[c(1,2,2,3,3,3)]
four
four[seq(2,length(four), 2)]
four[seq(3,length(four), 2)]
four[seq(2,length(four), 2)]
player[seq(2,length(four), 2)]
player[seq(2,length(player), 2)]
player[seq(1,length(salary), 2)]
team[seq(2, length(team), 2)]
team[-seq(2, length(team), 2)]
team[seq(length(team), 2, -2)]
TRUE & TRUE
TRUE & FALSE
FALSE & FALSE
TRUE | TRUE
TRUE | FALSE
FALSE | FALSE
!TRUE
!FALSE
player[position == "C"]
player[position == "C" & team == 'GSW']
player[team == 'LAL' & team == 'GSW']
player[team == 'LAL' | team == 'GSW']
player[team == 'LAL' & (position == 'PG' | position == 'SG']
player[team == 'LAL' & (position == 'PG' | position == 'SG')]
player[position == 'SF' & (team == 'GSW' | team == 'LAL')]
player[which.max(salary)]
player[which.min(salary)]
player[which.max(scored)]
salary[which.max(scored)]
max(salary[position == 'C'])
team[which.max(scored)]
player[which.max(points3)]
plot(scored, salary)
install.packages(c("ggplot2", "plotly"))
library(plotly)
plot_ly(x = scored, y = salary, type = "scatter", mode = "markers")
log_scored <- log(scored)
log_salary <- log(salary)
plot(log_scored, log_salary)
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = player)
text(log_scored, log_salary, labels = abbreviate(player))
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = abbreviate(player))
plot(scored[team == 'GSW'], salary[team == 'GSW'])
text(scored[team == 'GSW'], salary[team == 'GSW'], labels = abbreviate(player))
plot(scored[team == 'GSW'], salary[team == 'GSW'])
plot_ly(x = scored[team == 'GSW'], y = salary[team == 'GSW'], type = "scatter", mode = "markers")
gsw_score = scored[team == 'GSW']
gsw_salary = salary[team == 'GSW']
plot(gsw_score, gsw_salary)
text(gsw_score, gsw_salary, labels = abbreviate(player[team == 'GSW']))
log_scored <- log(gsw_score)
log_salary <- log(gsw_salary)
plot(log_scored, log_salary)
text(log_scored, log_salary, labels = abbreviate(player[team == 'GSW']))
position_fac <- factor(position)
table(position_fac)
position_fac[1:5]
plot(scored, salary)
plot(scored, salary, col=position_fac)
plot(scored, salary, col=position_fac, ph=16)
plot(scored, salary, col=position_fac, pch=16)
plot(scored, salary, col=position_fac, pch=16, cex=3)
plot(scored, salary, col=position_fac, pch=16, cex=1)
plot(scored, salary, col=position_fac, pch=16, cex=0.5)
plot(scored, salary, col=position_fac, pch=16, cex=1.5)
position_fac[team == 'GSW']
position_fac[salary > 15000000]
table(position_fac[salary > 15000000])
prop.table(table(team_fac[position == 'SG']))
team_fac = factor(team)
prop.table(table(team_fac[position == 'SG']))
prop.table(table(team_fac[position == 'SG']/team_fac[position != 'SG']))
prop.table(table(team_fac[position == 'SG']))
datafile
github <- 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <- 'master/data/nba2018-players.csv'
datafile <- paste0(github, repo)
read.csv(datafile, header = FALSE, nrows = 10)
read.csv(datafile, header = FALSE, nrows = 10)
csv = read.csv(datafile, header = FALSE, nrows = 10)
str(csv, vec.len = 1)
read.table(datafile, nrows = 10)
read.table(datafile, nrows = 10, sep = ",")
help(read.csv)
object.size(read.csv(datafile, colClasses = data_types, header = TRUE))
data_types <- c("character","factor","factor","integer","integer","integer","integer","character","double","integer","integer","integer","integer","integer","integer")
object.size(read.csv(datafile, colClasses = data_types, header = TRUE))
object.size(read.csv(datafile, header = TRUE))
nba <- read.csv(datafile, colClasses = data_types, header = TRUE)
nba
as.matrix(nba)
csv
nba <- read.csv(datafile, colClasses = data_types, header = TRUE)
nba
summary(nba$salary)
hist(nba$salary)
help(hist)
hist(nba$salary)
nba$salary2 <- nba$salary / 1000000
nba$salary2
hist(nba$salary2)
hist(log(nba$salary2))
low <- nba[log(nba$salary2) < -3]
low <- nba[(log(nba$salary2)) < -3]
nba[nba$salary2 < 5]
low <- nba[log(nba$salary2) < -3, ]
low
low <- log(nba$salary2) < -3
length(nba[low, ])
nba[low, c("player", "weight", "height", "team", "position")]
nba[-low, c("player", "weight", "height", "team", "position")]
summary(nba$points)
hist(nba$points)
nba[nba$points == 0, ]
nba[nba$points == 0, ]$points = 0.1
nba
nba[nba$points == 0, ]
nba[nba$points == 0.1, ]
boxplot(salary2 ~ age, data = nba,
xlab = "Age", ylab = "Salary (in millions)")
boxplot(salary ~ age, data = nba,
xlab = "Age", ylab = "Salary (in millions)")
boxplot(points ~ age, data = nba,
xlab = "Age", ylab = "Salary (in millions)")
age2 <- nba$age
age2[age2 < 19]
age2
age2[age2 < 19] = 20
age2
age2[age2 < 30] = 20
age2
age2 <- nba$age
age2[age2 < 19] = 20
age2
cut(age2, breaks = 3, labels = ["20-24", "25-29", "30+"])
cut(age2, breaks = 3, labels = c("20-24", "25-29", "30+"))
summary(cut(age2, breaks = 3, labels = c("20-24", "25-29", "30+")))
summary(cut(age2, breaks = c(20, 25, 30, max(age2)), labels = c("20-24", "25-29", "30+")))
summary(cut(age2, breaks = c(19, 25, 30, max(age2)), labels = c("20-24", "25-29", "30+")))
summary(cut(age2, breaks = c(18, 25, 30, max(age2)), labels = c("20-24", "25-29", "30+")))
summary(cut(age2, breaks = c(19, 25, 30, max(age2)), labels = c("20-24", "25-29", "30+")))
age2
age2[age2 > 19 & age2 < 25]
length(age2[age2 > 19 & age2 < 25])
summary(cut(age2, breaks = c(19, 24, 29, max(age2)), labels = c("20-24", "25-29", "30+")))
length(age2[age2 > 24 & age2 < 30])
length(age2[age2 > 29])
max(age2)
length(age2[age2 == 40])
length(age2[age2 == 19])
palette1 <- c("#D4D62A", "#4F9D66", "#9575AB")
age2 <- cut(age2, breaks = c(19, 24, 29, max(age2)), labels = c("20-24", "25-29", "30+"))
summary(age2)
age2[c("#D4D62A", "#4F9D66", "#9575AB")]
age_colors <- age2[c("#D4D62A", "#4F9D66", "#9575AB")]
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
age2 <- nba$age
age2[age2 < 19] = 20
age2 <- cut(age2, breaks = c(18, 25, 30, max(age2)), labels = c("20-24", "25-29", "30+"))
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
pch = 19, cex = 0.6)
age2 <- nba$age
age2[age2 < 19] = 20
age2 <- cut(age2, breaks = c(19, 24, 29, max(age2)), labels = c("20-24", "25-29", "30+"))
palette1[age2]
age2
age_colors <- palette1[age2]
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = age_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(age2),
title = "Age Groups", cex = 0.8)
boxplot(salary2 ~ position, data = nba,
xlab = "Age", ylab = "Salary (in millions)")
boxplot(points ~ position, data = nba,
xlab = "Age", ylab = "Salary (in millions)")
palette2 <- c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
pos_colors <- palette2[nba$position]
pos_colors
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
plot(salary ~ points, data = nba, main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
plot(salary ~ points, data = nba, log = "xy", main = "",
xlab = "Points (log scale)", ylab = "Salary (log $)",
col = pos_colors, pch = 19, cex = 0.6)
legend("bottomright", fill = palette2, legend = levels(nba$position),
title = "Positions", cex = 0.8)
1+TRUE
1+!TRUE
!TRUE+1
lord <- c('v', 'o', 'l', 'd', 'e', 'm', 'o', 'r', 't')
!is.na(lord)
thompson$name = "Klay Thompson"
source('~/stat133/workout01/code/make-shots-data-script.R', echo=TRUE)
getwd()
setwd("stat133/workout01/code")
getwd()
source('~/stat133/workout01/code/make-shots-data-script.R', echo=TRUE)
curry
curry$shot_made_flag[curry$shot_made_flag == 'n'] = 'shot_no'
curry
source('~/stat133/workout01/code/make-shots-data-script.R', echo=TRUE)
